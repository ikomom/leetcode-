给定一个字符串只包含字符'(', ')', '{', '}', '[' 和 ']'，确定输入的字符是否有效，条件：括号是成对的，并且关闭的顺序要一样
注意：一个空字符串也是有效的

Example 1:
    Input: "()"
    Output: true

Example 2:
Input: "()[]{}"
Output: true

Example 3:
    Input: "(]"
    Output: false

Example 4:
    Input: "([)]"
    Output: false

Example 5:
    Input: "{[]}"
    Output: true


我的思路：
建立一个hashMap存放字符，并且读取字符串放进堆栈中比对

以前我的思路
1. 判断传入字符串的奇偶，若是奇数，输出NO
2. 若是偶数，将字符串压入堆栈，压入前判断堆栈(只能插入**字符集**)是否为空？为空，压入字符串
3. 不为空，判断栈**顶部元素和插入字符**是否匹配？匹配，顶部元素弹出堆栈；不匹配，将字符插入堆栈。
4. 因为若是匹配，总有一组符号会相互配对
5. 最后判断**字符串不等于0 && 栈是否为空**？为空，那所有符号都匹配，都出栈了，输出Yes；不为空，那就是不匹配，输出No